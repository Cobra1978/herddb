// automatically generated by the FlatBuffers compiler, do not modify

package herddb.proto.flatbuf;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class TxLogEntry extends Table {
  public static TxLogEntry getRootAsTxLogEntry(ByteBuffer _bb) { return getRootAsTxLogEntry(_bb, new TxLogEntry()); }
  public static TxLogEntry getRootAsTxLogEntry(ByteBuffer _bb, TxLogEntry obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public TxLogEntry __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte entry(int j) { int o = __offset(4); return o != 0 ? bb.get(__vector(o) + j * 1) : 0; }
  public int entryLength() { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; }
  public ByteBuffer entryAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer entryInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }

  public static int createTxLogEntry(FlatBufferBuilder builder,
      int entryOffset) {
    builder.startObject(1);
    TxLogEntry.addEntry(builder, entryOffset);
    return TxLogEntry.endTxLogEntry(builder);
  }

  public static void startTxLogEntry(FlatBufferBuilder builder) { builder.startObject(1); }
  public static void addEntry(FlatBufferBuilder builder, int entryOffset) { builder.addOffset(0, entryOffset, 0); }
  public static int createEntryVector(FlatBufferBuilder builder, byte[] data) { builder.startVector(1, data.length, 1); for (int i = data.length - 1; i >= 0; i--) builder.addByte(data[i]); return builder.endVector(); }
  public static void startEntryVector(FlatBufferBuilder builder, int numElems) { builder.startVector(1, numElems, 1); }
  public static int endTxLogEntry(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

