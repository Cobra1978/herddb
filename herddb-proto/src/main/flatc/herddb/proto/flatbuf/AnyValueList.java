// automatically generated by the FlatBuffers compiler, do not modify

package herddb.proto.flatbuf;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class AnyValueList extends Table {
  public static AnyValueList getRootAsAnyValueList(ByteBuffer _bb) { return getRootAsAnyValueList(_bb, new AnyValueList()); }
  public static AnyValueList getRootAsAnyValueList(ByteBuffer _bb, AnyValueList obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public AnyValueList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public AnyValueWrapper items(int j) { return items(new AnyValueWrapper(), j); }
  public AnyValueWrapper items(AnyValueWrapper obj, int j) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int itemsLength() { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; }

  public static int createAnyValueList(FlatBufferBuilder builder,
      int itemsOffset) {
    builder.startObject(1);
    AnyValueList.addItems(builder, itemsOffset);
    return AnyValueList.endAnyValueList(builder);
  }

  public static void startAnyValueList(FlatBufferBuilder builder) { builder.startObject(1); }
  public static void addItems(FlatBufferBuilder builder, int itemsOffset) { builder.addOffset(0, itemsOffset, 0); }
  public static int createItemsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startItemsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endAnyValueList(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

