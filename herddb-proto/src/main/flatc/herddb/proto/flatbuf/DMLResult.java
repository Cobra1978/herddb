// automatically generated by the FlatBuffers compiler, do not modify

package herddb.proto.flatbuf;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class DMLResult extends Table {
  public static DMLResult getRootAsDMLResult(ByteBuffer _bb) { return getRootAsDMLResult(_bb, new DMLResult()); }
  public static DMLResult getRootAsDMLResult(ByteBuffer _bb, DMLResult obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public DMLResult __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long updateCount() { int o = __offset(4); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public Map newValue() { return newValue(new Map()); }
  public Map newValue(Map obj) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }

  public static int createDMLResult(FlatBufferBuilder builder,
      long updateCount,
      int newValueOffset) {
    builder.startObject(2);
    DMLResult.addUpdateCount(builder, updateCount);
    DMLResult.addNewValue(builder, newValueOffset);
    return DMLResult.endDMLResult(builder);
  }

  public static void startDMLResult(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addUpdateCount(FlatBufferBuilder builder, long updateCount) { builder.addLong(0, updateCount, 0L); }
  public static void addNewValue(FlatBufferBuilder builder, int newValueOffset) { builder.addOffset(1, newValueOffset, 0); }
  public static int endDMLResult(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

